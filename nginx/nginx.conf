events {}

http {
    ssl_certificate     /etc/nginx/ssl/cert.crt;
    ssl_certificate_key /etc/nginx/ssl/cert.key;

    # Upstreams point to service names defined in docker-compose
    upstream frontend {
        server frontend:5173;
    }
    upstream backend {
        server backend:8888;
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name localhost;

        # Proxy API calls to backend container
        location /api/ {
            proxy_pass         http://backend;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        # Proxy frontend + WebSocket (HMR) support
        location / {
            proxy_pass           http://frontend;
            proxy_http_version   1.1;
            proxy_set_header     Upgrade           $http_upgrade;
            proxy_set_header     Connection        "Upgrade";
            proxy_set_header     Host              $host;
            proxy_set_header     X-Real-IP         $remote_addr;
            proxy_set_header     X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header     X-Forwarded-Proto $scheme;
        }

        # Proxy backend WebSocket endpoints (if any)
        location /ws/ {
            proxy_pass           http://backend/api/;
            proxy_http_version   1.1;
            proxy_set_header     Upgrade           $http_upgrade;
            proxy_set_header     Connection        "Upgrade";
            proxy_set_header     Host              $host;
            proxy_set_header     X-Real-IP         $remote_addr;
            proxy_set_header     X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header     X-Forwarded-Proto $scheme;
        }
    }
}